name: Docker Image CI

on:
  push:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run : docker login -u ${{ secrets.DOCKER_USR }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      run: docker build -t sflask:latest .
    - name: Tags
      run: |
        docker tag sflask ${{ secrets.DOCKER_USER }}/sflask:${{ github.sha }}
        docker tag sflask ${{ secrets.DOCKER_USER }}/sflask:latest
    - name: Push to docker hub
      run : |   
        docker push ${{ secrets.DOCKER_USER }}/sflask:latest

    - name: Send deployment notification to ClickUp
      if: always()
      env:
        CLICKUP_WORKSPACE_ID: ${{ secrets.CLICKUP_WORKSPACE_ID }}
        CLICKUP_CHANNEL_ID: ${{ secrets.CLICKUP_CHANNEL_ID }}
        CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
      run: |
          REPO_LINK="https://github.com/${GITHUB_REPOSITORY}"
          COMMIT_LINK="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          
          if [ "${{ job.status }}" = "success" ]; then
            STATUS_ICON="ðŸŸ¢"
            STATUS_TEXT="**SUCCESS**"
            FAIL_REASON=""
          else
            STATUS_ICON="ðŸ”´"
            STATUS_TEXT="**FAILURE**"
            JOB_NAME="${{ github.job }}"
            STEP_NAME="${{ steps.name }}"
            FAIL_REASON="**Job:** $JOB_NAME"
          fi
          
          MESSAGE="Build Status: ${STATUS_TEXT} ${STATUS_ICON} 
          **Repository :** [${GITHUB_REPOSITORY}](${REPO_LINK})  
          **Commit :** [${GITHUB_SHA::7}](${COMMIT_LINK})
          **Commit Message :** ${{ github.event.workflow_run.head_commit.message }}
          **Description :** New changes apply on **Branch :** ${GITHUB_REF_NAME} of \`${GITHUB_REPOSITORY}\`
          **Pushed By :** ${GITHUB_ACTOR}
          **Failed By:** ${FAIL_REASON}"

          curl --request POST \
            --url "https://api.clickup.com/api/v3/workspaces/${CLICKUP_WORKSPACE_ID}/chat/channels/${CLICKUP_CHANNEL_ID}/messages" \
            --header "Authorization: ${CLICKUP_API_TOKEN}" \
            --header "accept: application/json" \
            --header "content-type: application/json" \
            --data "$(jq -n \
              --arg type "message" \
              --arg content_format "text/md" \
              --arg content "$MESSAGE" \
              '{type: $type, content_format: $content_format, content: $content}')"
