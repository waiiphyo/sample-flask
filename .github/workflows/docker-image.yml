name: Docker Image CI

on:
  push:
    branches: [ main ]
env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/sflask

jobs:

  Build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create reports folder
      run: mkdir -p reports
      
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build the Docker image
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

  Scan_and_Push:
    name: scan and push
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Run Trivy scan Report
      uses: aquasecurity/trivy-action@0.21.0
      with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          severity: CRITICAL,HIGH
          vuln-type: os,library
          exit-code: '1' 
          format: "table"
          output: reports/trivy-report.md

    # Run Trivy scan (JSON) for severity count
    - name: Run Trivy scan (JSON)
      if: always()
      uses: aquasecurity/trivy-action@0.21.0
      with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          severity: CRITICAL,HIGH
          vuln-type: os,library
          format: json
          output: trivy-report.json

    - name: Count vulnerabilities by severity
      if: always()
      id: vuln
      run: |
          high=$(jq '[.. | .Severity? // empty | select(. == "HIGH")] | length' trivy-report.json)
          critical=$(jq '[.. | .Severity? // empty | select(. == "CRITICAL")] | length' trivy-report.json)

          echo "high=$high" >> $GITHUB_OUTPUT
          echo "critical=$critical" >> $GITHUB_OUTPUT
          
    - name: List reports folder
      if: always()
      run: ls -R reports

    - name: Upload Trivy report as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
          name: trivy-report
          path: reports/trivy-report.md
          retention-days: 1
          
    #- name: Generate Artifact URL
    #  if: always()
    #  id: artifact
    #  run: |
    #      run_id=${{ github.run_id }}
    #      repo=${{ github.repository }}
    #      # echo "artifact_url=https://github.com/$repo/actions/runs/$run_id/artifacts" >> $GITHUB_OUTPUT
    #      echo "https://github.com/$repo/actions/runs/$run_id/artifacts"

    - name: Push to docker hub
      if: success()
      run : |   
          docker push $IMAGE_NAME:${IMAGE_TAG}
  
  Notify-Clickup:
    name: clickup notification
    runs-on: ubuntu-latest
    if: always()
    steps:
  
    - name: Send deployment notification to ClickUp
      env:
        CLICKUP_WORKSPACE_ID: ${{ secrets.CLICKUP_WORKSPACE_ID }}
        CLICKUP_CHANNEL_ID: ${{ secrets.CLICKUP_CHANNEL_ID }}
        CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        repo: ${{ github.repository }}
        run_id: ${{ github.run_id }}

      run: |
          REPO_LINK="https://github.com/${GITHUB_REPOSITORY}"
          COMMIT_LINK="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          
          if [ "${{ job.status }}" = "success" ]; then
    
            STATUS_ICON="üü¢"
            STATUS_TEXT="SUCCESS"
            MESSAGE="#### Build Result Overview
            **Build Status :** ${STATUS_TEXT} ${STATUS_ICON} 
            **Repository :** [${GITHUB_REPOSITORY}](${REPO_LINK})  
            **Commit ID :** [${GITHUB_SHA::7}](${COMMIT_LINK})
            **Commit Message:** ${COMMIT_MESSAGE}
            **Description :** ${COMMIT_MESSAGE} on **${GITHUB_REF_NAME}** of \`${GITHUB_REPOSITORY}\`
            **Pushed By :** ${GITHUB_ACTOR}

            ---
            ### Trivy Docker image scan completed ‚úÖ
            - üê≥ Image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            - üî¥ CRITICAL: **${{ steps.vuln.outputs.critical }}**
            - üü† HIGH: **${{ steps.vuln.outputs.high }}**"
            
          else
            STATUS_ICON="üî¥"
            STATUS_TEXT="FAILURE"
            JOB_NAME="${{ github.job }}"
            FAIL_REASON="$JOB_NAME"

            MESSAGE="#### Build Result Overview
            **Build Status :** ${STATUS_TEXT} ${STATUS_ICON} 
            **Repository :** [${GITHUB_REPOSITORY}](${REPO_LINK})  
            **Commit ID :** [${GITHUB_SHA::7}](${COMMIT_LINK})
            **Commit Message:** ${COMMIT_MESSAGE}
            **Description :** ${COMMIT_MESSAGE} on **${GITHUB_REF_NAME}** of \`${GITHUB_REPOSITORY}\`
            **Pushed By :** ${GITHUB_ACTOR}
            **Failed On:** ${FAIL_REASON}

            ---
            ### Trivy Docker image scan completed ‚úÖ
            - üê≥ Image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            - üî¥ CRITICAL: **${{ steps.vuln.outputs.critical }}**
            - üü† HIGH: **${{ steps.vuln.outputs.high }}**
            - üìÑ [Download full report]('https://github.com/${repo}/actions/runs/${run_id}') (retained for 1 day)"
            
          fi
      
          curl --request POST \
            --url "https://api.clickup.com/api/v3/workspaces/${CLICKUP_WORKSPACE_ID}/chat/channels/${CLICKUP_CHANNEL_ID}/messages" \
            --header "Authorization: ${CLICKUP_API_TOKEN}" \
            --header "accept: application/json" \
            --header "content-type: application/json" \
            --data "$(jq -n \
              --arg type "message" \
              --arg content_format "text/md" \
              --arg content "$MESSAGE" \
              '{type: $type, content_format: $content_format, content: $content}')"
